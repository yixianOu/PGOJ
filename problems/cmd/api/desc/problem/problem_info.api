syntax = "v1"

type Problem {
	ProblemId    int64
	Author       string
	Addtime      int64
	Oj           string
	Title        string
	Description  string
	Input        string
	Output       string
	SampleInput  string
	SampleOutput string
	Hint         string
	Source       string
	LimitTime    int64
	LimitMemory  int64
	Auth         int64
	Level        int64
//	test_count   int64
	ProblemCode  string
}

type (
	AddProblemRequest {
		//      Author string `form:"author"`       // author字段从jwt中获取
		Oj          string `form:"oj,optional"`
		Title       string `form:"title"`
		Description string `form:"description"`
		Input       string `form:"input"`
		Output      string `form:"output"`
		SampleInput string `form:"input_desc"`
		SampleOutput string `form:"output_desc"`
		Hint        string `form:"hint,optional"`
		Source      string `form:"source,optional"`
		LimitTime   int64  `form:"limit_time"`
		LimitMemory int64  `form:"limit_memory"`
		Auth        int64  `form:"auth,default=1"`
		Level       int64  `form:"level,options=[1,2,3,4,5]"`
		ProblemCode string `form:"problem_code,optional"`
		//        TestCount int64 `form:"test_count"`   // 测试用例数量由后端自动生成
		Score  int64   `form:"score,default=0"`
		TagIds []int64 `form:"tag_ids,optional"`
	}
	AddProblemResponse  {}
)

type (
	DeleteProblemRequest {
		ProblemId int64 `form:"problem_id"`
	}
	DeleteProblemResponse  {}
)

type (
	GetProblemByIdRequest {
		ProblemId int64 `path:"problem_id"`
	}
	GetProblemByIdResponse {
		Problem Problem `json:"problem"`
	}
)

type (
	SearchProblemsRequest {
		Page        int64  `form:"page,default=1"`
		PageSize    int64  `form:"page_size,default=10"`
		Author      string `form:"author,optional"`
		Title       string `form:"title,optional"`
		ProblemCode string `form:"problem_code,optional"`
		Oj          string `form:"oj,optional"`
		Description string `form:"description,optional"`
		Source      string `form:"source,optional"`
		Auth        int64  `form:"auth,optional"`
		Level       int64  `form:"level,options=[1,2,3,4,5],optional"`
		Order       bool   `form:"order,optional"`
	}
	SearchProblemsResponse {
		Problems []Problem `json:"problems"`
//		TotalValid int64 `json:"total_valid"`
	}
)

type (
	ListProblemsByTagIdRequest {
		TagId    int64 `path:"tag_id"`
		Page     int64 `form:"page,default=1"`
		PageSize int64 `form:"page_size,default=10"`
	}
	ListProblemsByTagIdResponse {
		Problems []Problem `json:"problems"`
	}
)

type (
	UpdateProblemRequest {
		ProblemId    int64   `form:"problem_id"`
		Author       string  `form:"author,optional"`
		Oj           string  `form:"oj,optional"`
		Title        string  `form:"title,optional"`
		Description  string  `form:"description,optional"`
		Input        string  `form:"input,optional"`
		Output       string  `form:"output,optional"`
		SampleInput  string  `form:"sample_input,optional"`
		SampleOutput string  `form:"sample_output,optional"`
		Hint         string  `form:"hint,optional"`
		Source       string  `form:"source,optional"`
		LimitTime    int64   `form:"limit_time,optional"`
		LimitMemory  int64   `form:"limit_memory,optional"`
		Auth         int64   `form:"auth,optional"`
		Level        int64   `form:"level,options=[1,2,3,4,5],optional"`
		ProblemCode  string  `form:"problem_code,optional"`
//		TestCount    int64   `form:"test_count,optional"`
		TagIds       []int64 `form:"tag_ids,optional"`
		tagOperation bool    `form:"tag_operation,optional"`
	}
	UpdateProblemResponse  {}
)

