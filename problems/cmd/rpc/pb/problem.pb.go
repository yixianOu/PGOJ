// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: problem.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------problem--------------------------------
type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64                  `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	Author    string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`        //author
	Addtime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=addtime,proto3" json:"addtime,omitempty"`      //addtime
	Oj        string                 `protobuf:"bytes,4,opt,name=oj,proto3" json:"oj,omitempty"`                //oj
	Title     string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`          //title
	Des       string                 `protobuf:"bytes,6,opt,name=des,proto3" json:"des,omitempty"`              //des
	Input     string                 `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`          //input
	Output    string                 `protobuf:"bytes,8,opt,name=output,proto3" json:"output,omitempty"`        //output
	Sinput    string                 `protobuf:"bytes,9,opt,name=sinput,proto3" json:"sinput,omitempty"`        //sinput
	Soutput   string                 `protobuf:"bytes,10,opt,name=soutput,proto3" json:"soutput,omitempty"`     //soutput
	Source    string                 `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`       //source
	Time      int64                  `protobuf:"varint,12,opt,name=time,proto3" json:"time,omitempty"`          //time
	Memory    int64                  `protobuf:"varint,13,opt,name=memory,proto3" json:"memory,omitempty"`      //memory
	Hint      string                 `protobuf:"bytes,14,opt,name=hint,proto3" json:"hint,omitempty"`           //hint
	Auth      int64                  `protobuf:"varint,15,opt,name=auth,proto3" json:"auth,omitempty"`          //auth
	Level     int64                  `protobuf:"varint,16,opt,name=level,proto3" json:"level,omitempty"`        //level
	// int64 test_count = 17; //test_count
	ProblemCode string `protobuf:"bytes,18,opt,name=problem_code,json=problemCode,proto3" json:"problem_code,omitempty"` //problem_code
}

func (x *Problem) Reset() {
	*x = Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{0}
}

func (x *Problem) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *Problem) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Problem) GetAddtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Addtime
	}
	return nil
}

func (x *Problem) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *Problem) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Problem) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Problem) GetSinput() string {
	if x != nil {
		return x.Sinput
	}
	return ""
}

func (x *Problem) GetSoutput() string {
	if x != nil {
		return x.Soutput
	}
	return ""
}

func (x *Problem) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Problem) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Problem) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Problem) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *Problem) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *Problem) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Problem) GetProblemCode() string {
	if x != nil {
		return x.ProblemCode
	}
	return ""
}

type AddProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64  `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	Author    string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`        //author
	// int64 addtime = 3; //addtime
	Oj      string  `protobuf:"bytes,4,opt,name=oj,proto3" json:"oj,omitempty"`                  //oj
	Title   string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`            //title
	Des     string  `protobuf:"bytes,6,opt,name=des,proto3" json:"des,omitempty"`                //des
	Input   string  `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`            //input
	Output  string  `protobuf:"bytes,8,opt,name=output,proto3" json:"output,omitempty"`          //output
	Sinput  string  `protobuf:"bytes,9,opt,name=sinput,proto3" json:"sinput,omitempty"`          //sinput
	Soutput string  `protobuf:"bytes,10,opt,name=soutput,proto3" json:"soutput,omitempty"`       //soutput
	Source  string  `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`         //source
	Time    int64   `protobuf:"varint,12,opt,name=time,proto3" json:"time,omitempty"`            //time
	Memory  int64   `protobuf:"varint,13,opt,name=memory,proto3" json:"memory,omitempty"`        //memory
	Hint    string  `protobuf:"bytes,14,opt,name=hint,proto3" json:"hint,omitempty"`             //hint
	Auth    int64   `protobuf:"varint,15,opt,name=auth,proto3" json:"auth,omitempty"`            //auth
	Level   int64   `protobuf:"varint,16,opt,name=Level,proto3" json:"Level,omitempty"`          //level
	Score   int64   `protobuf:"varint,17,opt,name=Score,proto3" json:"Score,omitempty"`          //score
	TagIds  []int64 `protobuf:"varint,18,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"` //tagIds
	// int64 test_count = 19; //test_count
	ProblemCode string `protobuf:"bytes,20,opt,name=problem_code,json=problemCode,proto3" json:"problem_code,omitempty"` //problem_code
}

func (x *AddProblemReq) Reset() {
	*x = AddProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemReq) ProtoMessage() {}

func (x *AddProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemReq.ProtoReflect.Descriptor instead.
func (*AddProblemReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{1}
}

func (x *AddProblemReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddProblemReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AddProblemReq) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *AddProblemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddProblemReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *AddProblemReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AddProblemReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *AddProblemReq) GetSinput() string {
	if x != nil {
		return x.Sinput
	}
	return ""
}

func (x *AddProblemReq) GetSoutput() string {
	if x != nil {
		return x.Soutput
	}
	return ""
}

func (x *AddProblemReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *AddProblemReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *AddProblemReq) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *AddProblemReq) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *AddProblemReq) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *AddProblemReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AddProblemReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *AddProblemReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *AddProblemReq) GetProblemCode() string {
	if x != nil {
		return x.ProblemCode
	}
	return ""
}

type AddProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddProblemResp) Reset() {
	*x = AddProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemResp) ProtoMessage() {}

func (x *AddProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemResp.ProtoReflect.Descriptor instead.
func (*AddProblemResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{2}
}

type UpdateProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64  `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	Author    string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`        //author
	// google.protobuf.Timestamp addtime = 3; //addtime
	Oj      string `protobuf:"bytes,4,opt,name=oj,proto3" json:"oj,omitempty"`            //oj
	Title   string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`      //title
	Des     string `protobuf:"bytes,6,opt,name=des,proto3" json:"des,omitempty"`          //des
	Input   string `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`      //input
	Output  string `protobuf:"bytes,8,opt,name=output,proto3" json:"output,omitempty"`    //output
	Sinput  string `protobuf:"bytes,9,opt,name=sinput,proto3" json:"sinput,omitempty"`    //sinput
	Soutput string `protobuf:"bytes,10,opt,name=soutput,proto3" json:"soutput,omitempty"` //soutput
	Source  string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`   //source
	Time    int64  `protobuf:"varint,12,opt,name=time,proto3" json:"time,omitempty"`      //time
	Memory  int64  `protobuf:"varint,13,opt,name=memory,proto3" json:"memory,omitempty"`  //memory
	Hint    string `protobuf:"bytes,14,opt,name=hint,proto3" json:"hint,omitempty"`       //hint
	Auth    int64  `protobuf:"varint,15,opt,name=auth,proto3" json:"auth,omitempty"`      //auth
	Level   int64  `protobuf:"varint,16,opt,name=Level,proto3" json:"Level,omitempty"`    //level
	// int64 test_count = 17; //test_count
	ProblemCode  string  `protobuf:"bytes,18,opt,name=problem_code,json=problemCode,proto3" json:"problem_code,omitempty"` //problem_code
	TagIds       []int64 `protobuf:"varint,19,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`                      //tagIds
	TagOperation bool    `protobuf:"varint,20,opt,name=tagOperation,proto3" json:"tagOperation,omitempty"`                 //tagOperation
}

func (x *UpdateProblemReq) Reset() {
	*x = UpdateProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemReq) ProtoMessage() {}

func (x *UpdateProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemReq.ProtoReflect.Descriptor instead.
func (*UpdateProblemReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateProblemReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *UpdateProblemReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *UpdateProblemReq) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *UpdateProblemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateProblemReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *UpdateProblemReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *UpdateProblemReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *UpdateProblemReq) GetSinput() string {
	if x != nil {
		return x.Sinput
	}
	return ""
}

func (x *UpdateProblemReq) GetSoutput() string {
	if x != nil {
		return x.Soutput
	}
	return ""
}

func (x *UpdateProblemReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UpdateProblemReq) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UpdateProblemReq) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *UpdateProblemReq) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *UpdateProblemReq) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *UpdateProblemReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UpdateProblemReq) GetProblemCode() string {
	if x != nil {
		return x.ProblemCode
	}
	return ""
}

func (x *UpdateProblemReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *UpdateProblemReq) GetTagOperation() bool {
	if x != nil {
		return x.TagOperation
	}
	return false
}

type UpdateProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProblemResp) Reset() {
	*x = UpdateProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemResp) ProtoMessage() {}

func (x *UpdateProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemResp.ProtoReflect.Descriptor instead.
func (*UpdateProblemResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{4}
}

type DelProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelProblemReq) Reset() {
	*x = DelProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProblemReq) ProtoMessage() {}

func (x *DelProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProblemReq.ProtoReflect.Descriptor instead.
func (*DelProblemReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{5}
}

func (x *DelProblemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelProblemResp) Reset() {
	*x = DelProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelProblemResp) ProtoMessage() {}

func (x *DelProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelProblemResp.ProtoReflect.Descriptor instead.
func (*DelProblemResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{6}
}

type GetProblemByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetProblemByIdReq) Reset() {
	*x = GetProblemByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemByIdReq) ProtoMessage() {}

func (x *GetProblemByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemByIdReq.ProtoReflect.Descriptor instead.
func (*GetProblemByIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{7}
}

func (x *GetProblemByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProblemByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"` //problem
}

func (x *GetProblemByIdResp) Reset() {
	*x = GetProblemByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemByIdResp) ProtoMessage() {}

func (x *GetProblemByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemByIdResp.ProtoReflect.Descriptor instead.
func (*GetProblemByIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{8}
}

func (x *GetProblemByIdResp) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type SearchProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	// int64 problemId = 3; //problemId
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"` //author
	// google.protobuf.Timestamp addtime = 5; //addtime
	Oj    string `protobuf:"bytes,6,opt,name=oj,proto3" json:"oj,omitempty"`       //oj
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"` //title
	Des   string `protobuf:"bytes,8,opt,name=des,proto3" json:"des,omitempty"`     //des
	// string input = 9; //input
	// string output = 10; //output
	// string sinput = 11; //sinput
	// string soutput = 12; //soutput
	Source string `protobuf:"bytes,13,opt,name=source,proto3" json:"source,omitempty"` //source
	// int64 time = 14; //time
	// int64 memory = 15; //memory
	// string hint = 16; //hint
	Auth  int64 `protobuf:"varint,17,opt,name=auth,proto3" json:"auth,omitempty"`   //auth
	Level int64 `protobuf:"varint,18,opt,name=Level,proto3" json:"Level,omitempty"` //level
	Order bool  `protobuf:"varint,19,opt,name=order,proto3" json:"order,omitempty"` //order
}

func (x *SearchProblemReq) Reset() {
	*x = SearchProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemReq) ProtoMessage() {}

func (x *SearchProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemReq.ProtoReflect.Descriptor instead.
func (*SearchProblemReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{9}
}

func (x *SearchProblemReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchProblemReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchProblemReq) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *SearchProblemReq) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *SearchProblemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchProblemReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *SearchProblemReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SearchProblemReq) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *SearchProblemReq) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SearchProblemReq) GetOrder() bool {
	if x != nil {
		return x.Order
	}
	return false
}

type SearchProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem []*Problem `protobuf:"bytes,1,rep,name=problem,proto3" json:"problem,omitempty"` //problem
}

func (x *SearchProblemResp) Reset() {
	*x = SearchProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemResp) ProtoMessage() {}

func (x *SearchProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemResp.ProtoReflect.Descriptor instead.
func (*SearchProblemResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{10}
}

func (x *SearchProblemResp) GetProblem() []*Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

type ListProblemsByTagIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	TagId int64 `protobuf:"varint,3,opt,name=tagId,proto3" json:"tagId,omitempty"` //tagId
}

func (x *ListProblemsByTagIdReq) Reset() {
	*x = ListProblemsByTagIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProblemsByTagIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsByTagIdReq) ProtoMessage() {}

func (x *ListProblemsByTagIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsByTagIdReq.ProtoReflect.Descriptor instead.
func (*ListProblemsByTagIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{11}
}

func (x *ListProblemsByTagIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListProblemsByTagIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListProblemsByTagIdReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type ListProblemsByTagIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problems []*Problem `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"` //problems
}

func (x *ListProblemsByTagIdResp) Reset() {
	*x = ListProblemsByTagIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProblemsByTagIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemsByTagIdResp) ProtoMessage() {}

func (x *ListProblemsByTagIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemsByTagIdResp.ProtoReflect.Descriptor instead.
func (*ListProblemsByTagIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{12}
}

func (x *ListProblemsByTagIdResp) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

// --------------------------------problemdata--------------------------------
type Problemdata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemdataId int64 `protobuf:"varint,1,opt,name=problemdataId,proto3" json:"problemdataId,omitempty"` //problemdataId
	ProblemId     int64 `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`         //problemId
	Submission    int64 `protobuf:"varint,4,opt,name=submission,proto3" json:"submission,omitempty"`       //submission
	Ac            int64 `protobuf:"varint,5,opt,name=ac,proto3" json:"ac,omitempty"`                       //ac
	Mle           int64 `protobuf:"varint,6,opt,name=mle,proto3" json:"mle,omitempty"`                     //mle
	Tle           int64 `protobuf:"varint,7,opt,name=tle,proto3" json:"tle,omitempty"`                     //tle
	Rte           int64 `protobuf:"varint,8,opt,name=rte,proto3" json:"rte,omitempty"`                     //rte
	Ole           int64 `protobuf:"varint,9,opt,name=ole,proto3" json:"ole,omitempty"`                     //pe
	Ce            int64 `protobuf:"varint,10,opt,name=ce,proto3" json:"ce,omitempty"`                      //ce
	Wa            int64 `protobuf:"varint,11,opt,name=wa,proto3" json:"wa,omitempty"`                      //wa
	Ue            int64 `protobuf:"varint,12,opt,name=ue,proto3" json:"ue,omitempty"`                      //se
	Score         int64 `protobuf:"varint,13,opt,name=score,proto3" json:"score,omitempty"`                //score
	Auth          int64 `protobuf:"varint,14,opt,name=auth,proto3" json:"auth,omitempty"`                  //auth
	Fe            int64 `protobuf:"varint,16,opt,name=fe,proto3" json:"fe,omitempty"`                      //fe
	Sf            int64 `protobuf:"varint,17,opt,name=sf,proto3" json:"sf,omitempty"`                      //sf
}

func (x *Problemdata) Reset() {
	*x = Problemdata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problemdata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problemdata) ProtoMessage() {}

func (x *Problemdata) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problemdata.ProtoReflect.Descriptor instead.
func (*Problemdata) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{13}
}

func (x *Problemdata) GetProblemdataId() int64 {
	if x != nil {
		return x.ProblemdataId
	}
	return 0
}

func (x *Problemdata) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *Problemdata) GetSubmission() int64 {
	if x != nil {
		return x.Submission
	}
	return 0
}

func (x *Problemdata) GetAc() int64 {
	if x != nil {
		return x.Ac
	}
	return 0
}

func (x *Problemdata) GetMle() int64 {
	if x != nil {
		return x.Mle
	}
	return 0
}

func (x *Problemdata) GetTle() int64 {
	if x != nil {
		return x.Tle
	}
	return 0
}

func (x *Problemdata) GetRte() int64 {
	if x != nil {
		return x.Rte
	}
	return 0
}

func (x *Problemdata) GetOle() int64 {
	if x != nil {
		return x.Ole
	}
	return 0
}

func (x *Problemdata) GetCe() int64 {
	if x != nil {
		return x.Ce
	}
	return 0
}

func (x *Problemdata) GetWa() int64 {
	if x != nil {
		return x.Wa
	}
	return 0
}

func (x *Problemdata) GetUe() int64 {
	if x != nil {
		return x.Ue
	}
	return 0
}

func (x *Problemdata) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Problemdata) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *Problemdata) GetFe() int64 {
	if x != nil {
		return x.Fe
	}
	return 0
}

func (x *Problemdata) GetSf() int64 {
	if x != nil {
		return x.Sf
	}
	return 0
}

type UpdateProblemdataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemdataId int64 `protobuf:"varint,1,opt,name=problemdataId,proto3" json:"problemdataId,omitempty"` //problemdataId
	// int64 problemId = 2; //problemId
	Submission int64 `protobuf:"varint,4,opt,name=submission,proto3" json:"submission,omitempty"` //submission
	Ac         int64 `protobuf:"varint,5,opt,name=ac,proto3" json:"ac,omitempty"`                 //ac
	Mle        int64 `protobuf:"varint,6,opt,name=mle,proto3" json:"mle,omitempty"`               //mle
	Tle        int64 `protobuf:"varint,7,opt,name=tle,proto3" json:"tle,omitempty"`               //tle
	Rte        int64 `protobuf:"varint,8,opt,name=rte,proto3" json:"rte,omitempty"`               //rte
	Ole        int64 `protobuf:"varint,9,opt,name=ole,proto3" json:"ole,omitempty"`               //pe
	Ce         int64 `protobuf:"varint,10,opt,name=ce,proto3" json:"ce,omitempty"`                //ce
	Wa         int64 `protobuf:"varint,11,opt,name=wa,proto3" json:"wa,omitempty"`                //wa
	Ue         int64 `protobuf:"varint,12,opt,name=ue,proto3" json:"ue,omitempty"`                //se
	Score      int64 `protobuf:"varint,13,opt,name=score,proto3" json:"score,omitempty"`          //score
	Auth       int64 `protobuf:"varint,14,opt,name=auth,proto3" json:"auth,omitempty"`            //auth
	Fe         int64 `protobuf:"varint,16,opt,name=fe,proto3" json:"fe,omitempty"`                //fe
	Sf         int64 `protobuf:"varint,17,opt,name=sf,proto3" json:"sf,omitempty"`                //sf
}

func (x *UpdateProblemdataReq) Reset() {
	*x = UpdateProblemdataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemdataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemdataReq) ProtoMessage() {}

func (x *UpdateProblemdataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemdataReq.ProtoReflect.Descriptor instead.
func (*UpdateProblemdataReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProblemdataReq) GetProblemdataId() int64 {
	if x != nil {
		return x.ProblemdataId
	}
	return 0
}

func (x *UpdateProblemdataReq) GetSubmission() int64 {
	if x != nil {
		return x.Submission
	}
	return 0
}

func (x *UpdateProblemdataReq) GetAc() int64 {
	if x != nil {
		return x.Ac
	}
	return 0
}

func (x *UpdateProblemdataReq) GetMle() int64 {
	if x != nil {
		return x.Mle
	}
	return 0
}

func (x *UpdateProblemdataReq) GetTle() int64 {
	if x != nil {
		return x.Tle
	}
	return 0
}

func (x *UpdateProblemdataReq) GetRte() int64 {
	if x != nil {
		return x.Rte
	}
	return 0
}

func (x *UpdateProblemdataReq) GetOle() int64 {
	if x != nil {
		return x.Ole
	}
	return 0
}

func (x *UpdateProblemdataReq) GetCe() int64 {
	if x != nil {
		return x.Ce
	}
	return 0
}

func (x *UpdateProblemdataReq) GetWa() int64 {
	if x != nil {
		return x.Wa
	}
	return 0
}

func (x *UpdateProblemdataReq) GetUe() int64 {
	if x != nil {
		return x.Ue
	}
	return 0
}

func (x *UpdateProblemdataReq) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UpdateProblemdataReq) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *UpdateProblemdataReq) GetFe() int64 {
	if x != nil {
		return x.Fe
	}
	return 0
}

func (x *UpdateProblemdataReq) GetSf() int64 {
	if x != nil {
		return x.Sf
	}
	return 0
}

type UpdateProblemdataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProblemdataResp) Reset() {
	*x = UpdateProblemdataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemdataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemdataResp) ProtoMessage() {}

func (x *UpdateProblemdataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemdataResp.ProtoReflect.Descriptor instead.
func (*UpdateProblemdataResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{15}
}

type GetProblemdataByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetProblemdataByIdReq) Reset() {
	*x = GetProblemdataByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemdataByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemdataByIdReq) ProtoMessage() {}

func (x *GetProblemdataByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemdataByIdReq.ProtoReflect.Descriptor instead.
func (*GetProblemdataByIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{16}
}

func (x *GetProblemdataByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProblemdataByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problemdata *Problemdata `protobuf:"bytes,1,opt,name=problemdata,proto3" json:"problemdata,omitempty"` //problemdata
}

func (x *GetProblemdataByIdResp) Reset() {
	*x = GetProblemdataByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemdataByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemdataByIdResp) ProtoMessage() {}

func (x *GetProblemdataByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemdataByIdResp.ProtoReflect.Descriptor instead.
func (*GetProblemdataByIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{17}
}

func (x *GetProblemdataByIdResp) GetProblemdata() *Problemdata {
	if x != nil {
		return x.Problemdata
	}
	return nil
}

type SearchProblemdataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	// int64 problemdataId = 3; //problemdataId
	// int64 problemId = 4; //problemId
	// int64 submission = 6; //submission
	// int64 ac = 7; //ac
	// int64 mle = 8; //mle
	// int64 tle = 9; //tle
	// int64 rte = 10; //rte
	// int64 pe = 11; //pe
	// int64 ce = 12; //ce
	// int64 wa = 13; //wa
	// int64 se = 14; //se
	ScoreFloor int64 `protobuf:"varint,15,opt,name=scoreFloor,proto3" json:"scoreFloor,omitempty"` //score
	ScoreCeil  int64 `protobuf:"varint,16,opt,name=scoreCeil,proto3" json:"scoreCeil,omitempty"`   //score
	Auth       int64 `protobuf:"varint,17,opt,name=auth,proto3" json:"auth,omitempty"`             //auth
	Order      bool  `protobuf:"varint,18,opt,name=order,proto3" json:"order,omitempty"`           //order
}

func (x *SearchProblemdataReq) Reset() {
	*x = SearchProblemdataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemdataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemdataReq) ProtoMessage() {}

func (x *SearchProblemdataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemdataReq.ProtoReflect.Descriptor instead.
func (*SearchProblemdataReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{18}
}

func (x *SearchProblemdataReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchProblemdataReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchProblemdataReq) GetScoreFloor() int64 {
	if x != nil {
		return x.ScoreFloor
	}
	return 0
}

func (x *SearchProblemdataReq) GetScoreCeil() int64 {
	if x != nil {
		return x.ScoreCeil
	}
	return 0
}

func (x *SearchProblemdataReq) GetAuth() int64 {
	if x != nil {
		return x.Auth
	}
	return 0
}

func (x *SearchProblemdataReq) GetOrder() bool {
	if x != nil {
		return x.Order
	}
	return false
}

type SearchProblemdataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problemdata []*Problemdata `protobuf:"bytes,1,rep,name=problemdata,proto3" json:"problemdata,omitempty"` //problemdata
}

func (x *SearchProblemdataResp) Reset() {
	*x = SearchProblemdataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemdataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemdataResp) ProtoMessage() {}

func (x *SearchProblemdataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemdataResp.ProtoReflect.Descriptor instead.
func (*SearchProblemdataResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{19}
}

func (x *SearchProblemdataResp) GetProblemdata() []*Problemdata {
	if x != nil {
		return x.Problemdata
	}
	return nil
}

// --------------------------------tag--------------------------------
type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   int64  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`    //tagId
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"` //tagName
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{20}
}

func (x *Tag) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *Tag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type AddTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   int64  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`    //tagId
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"` //tagName
}

func (x *AddTagReq) Reset() {
	*x = AddTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagReq) ProtoMessage() {}

func (x *AddTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagReq.ProtoReflect.Descriptor instead.
func (*AddTagReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{21}
}

func (x *AddTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *AddTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type AddTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTagResp) Reset() {
	*x = AddTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagResp) ProtoMessage() {}

func (x *AddTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagResp.ProtoReflect.Descriptor instead.
func (*AddTagResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{22}
}

type UpdateTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId   int64  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`    //tagId
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"` //tagName
}

func (x *UpdateTagReq) Reset() {
	*x = UpdateTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagReq) ProtoMessage() {}

func (x *UpdateTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagReq.ProtoReflect.Descriptor instead.
func (*UpdateTagReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *UpdateTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type UpdateTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTagResp) Reset() {
	*x = UpdateTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResp) ProtoMessage() {}

func (x *UpdateTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResp.ProtoReflect.Descriptor instead.
func (*UpdateTagResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{24}
}

type DelTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelTagReq) Reset() {
	*x = DelTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTagReq) ProtoMessage() {}

func (x *DelTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTagReq.ProtoReflect.Descriptor instead.
func (*DelTagReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{25}
}

func (x *DelTagReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelTagResp) Reset() {
	*x = DelTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTagResp) ProtoMessage() {}

func (x *DelTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTagResp.ProtoReflect.Descriptor instead.
func (*DelTagResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{26}
}

type GetTagByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetTagByIdReq) Reset() {
	*x = GetTagByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagByIdReq) ProtoMessage() {}

func (x *GetTagByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagByIdReq.ProtoReflect.Descriptor instead.
func (*GetTagByIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{27}
}

func (x *GetTagByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTagByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"` //tag
}

func (x *GetTagByIdResp) Reset() {
	*x = GetTagByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagByIdResp) ProtoMessage() {}

func (x *GetTagByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagByIdResp.ProtoReflect.Descriptor instead.
func (*GetTagByIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{28}
}

func (x *GetTagByIdResp) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type SearchTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	// int64 tagId = 3; //tagId
	TagName string `protobuf:"bytes,4,opt,name=tagName,proto3" json:"tagName,omitempty"` //tagName
	Order   bool   `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`    //order
}

func (x *SearchTagReq) Reset() {
	*x = SearchTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagReq) ProtoMessage() {}

func (x *SearchTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagReq.ProtoReflect.Descriptor instead.
func (*SearchTagReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{29}
}

func (x *SearchTagReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTagReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *SearchTagReq) GetOrder() bool {
	if x != nil {
		return x.Order
	}
	return false
}

type SearchTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag []*Tag `protobuf:"bytes,1,rep,name=tag,proto3" json:"tag,omitempty"` //tag
}

func (x *SearchTagResp) Reset() {
	*x = SearchTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagResp) ProtoMessage() {}

func (x *SearchTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagResp.ProtoReflect.Descriptor instead.
func (*SearchTagResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{30}
}

func (x *SearchTagResp) GetTag() []*Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListTagsByProblemIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
}

func (x *ListTagsByProblemIdReq) Reset() {
	*x = ListTagsByProblemIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsByProblemIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsByProblemIdReq) ProtoMessage() {}

func (x *ListTagsByProblemIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsByProblemIdReq.ProtoReflect.Descriptor instead.
func (*ListTagsByProblemIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{31}
}

func (x *ListTagsByProblemIdReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type ListTagsByProblemIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"` //tags
}

func (x *ListTagsByProblemIdResp) Reset() {
	*x = ListTagsByProblemIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTagsByProblemIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsByProblemIdResp) ProtoMessage() {}

func (x *ListTagsByProblemIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsByProblemIdResp.ProtoReflect.Descriptor instead.
func (*ListTagsByProblemIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{32}
}

func (x *ListTagsByProblemIdResp) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

// --------------------------------testcases--------------------------------
type Testcases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId         int64  `protobuf:"varint,1,opt,name=testId,proto3" json:"testId,omitempty"`                //testId
	ProblemId      int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`          //problemId
	TestGroup      int64  `protobuf:"varint,3,opt,name=testGroup,proto3" json:"testGroup,omitempty"`          //testGroup
	InputFileName  string `protobuf:"bytes,4,opt,name=inputFileName,proto3" json:"inputFileName,omitempty"`   //inputFileName
	OutputFileName string `protobuf:"bytes,5,opt,name=outputFileName,proto3" json:"outputFileName,omitempty"` //outputFileName
}

func (x *Testcases) Reset() {
	*x = Testcases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Testcases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Testcases) ProtoMessage() {}

func (x *Testcases) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Testcases.ProtoReflect.Descriptor instead.
func (*Testcases) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{33}
}

func (x *Testcases) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *Testcases) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *Testcases) GetTestGroup() int64 {
	if x != nil {
		return x.TestGroup
	}
	return 0
}

func (x *Testcases) GetInputFileName() string {
	if x != nil {
		return x.InputFileName
	}
	return ""
}

func (x *Testcases) GetOutputFileName() string {
	if x != nil {
		return x.OutputFileName
	}
	return ""
}

type AddTestcasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 testId = 1; //testId
	ProblemId      int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`          //problemId
	TestGroup      int64  `protobuf:"varint,3,opt,name=testGroup,proto3" json:"testGroup,omitempty"`          //testGroup
	InputFileName  string `protobuf:"bytes,4,opt,name=inputFileName,proto3" json:"inputFileName,omitempty"`   //inputFileName
	OutputFileName string `protobuf:"bytes,5,opt,name=outputFileName,proto3" json:"outputFileName,omitempty"` //outputFileName
}

func (x *AddTestcasesReq) Reset() {
	*x = AddTestcasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTestcasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTestcasesReq) ProtoMessage() {}

func (x *AddTestcasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTestcasesReq.ProtoReflect.Descriptor instead.
func (*AddTestcasesReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{34}
}

func (x *AddTestcasesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddTestcasesReq) GetTestGroup() int64 {
	if x != nil {
		return x.TestGroup
	}
	return 0
}

func (x *AddTestcasesReq) GetInputFileName() string {
	if x != nil {
		return x.InputFileName
	}
	return ""
}

func (x *AddTestcasesReq) GetOutputFileName() string {
	if x != nil {
		return x.OutputFileName
	}
	return ""
}

type AddTestcasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTestcasesResp) Reset() {
	*x = AddTestcasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTestcasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTestcasesResp) ProtoMessage() {}

func (x *AddTestcasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTestcasesResp.ProtoReflect.Descriptor instead.
func (*AddTestcasesResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{35}
}

type UpdateTestcasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId int64 `protobuf:"varint,1,opt,name=testId,proto3" json:"testId,omitempty"` //testId
	// int64 problemId = 2; //problemId
	// int64 testGroup = 3; //testGroup
	InputFileName  string `protobuf:"bytes,4,opt,name=inputFileName,proto3" json:"inputFileName,omitempty"`   //inputFileName
	OutputFileName string `protobuf:"bytes,5,opt,name=outputFileName,proto3" json:"outputFileName,omitempty"` //outputFileName
}

func (x *UpdateTestcasesReq) Reset() {
	*x = UpdateTestcasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcasesReq) ProtoMessage() {}

func (x *UpdateTestcasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcasesReq.ProtoReflect.Descriptor instead.
func (*UpdateTestcasesReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateTestcasesReq) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *UpdateTestcasesReq) GetInputFileName() string {
	if x != nil {
		return x.InputFileName
	}
	return ""
}

func (x *UpdateTestcasesReq) GetOutputFileName() string {
	if x != nil {
		return x.OutputFileName
	}
	return ""
}

type UpdateTestcasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTestcasesResp) Reset() {
	*x = UpdateTestcasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestcasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestcasesResp) ProtoMessage() {}

func (x *UpdateTestcasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestcasesResp.ProtoReflect.Descriptor instead.
func (*UpdateTestcasesResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{37}
}

type DelTestcasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelTestcasesReq) Reset() {
	*x = DelTestcasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTestcasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTestcasesReq) ProtoMessage() {}

func (x *DelTestcasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTestcasesReq.ProtoReflect.Descriptor instead.
func (*DelTestcasesReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{38}
}

func (x *DelTestcasesReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTestcasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelTestcasesResp) Reset() {
	*x = DelTestcasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTestcasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTestcasesResp) ProtoMessage() {}

func (x *DelTestcasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTestcasesResp.ProtoReflect.Descriptor instead.
func (*DelTestcasesResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{39}
}

type GetTestcasesByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetTestcasesByIdReq) Reset() {
	*x = GetTestcasesByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcasesByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcasesByIdReq) ProtoMessage() {}

func (x *GetTestcasesByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcasesByIdReq.ProtoReflect.Descriptor instead.
func (*GetTestcasesByIdReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{40}
}

func (x *GetTestcasesByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTestcasesByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Testcases *Testcases `protobuf:"bytes,1,opt,name=testcases,proto3" json:"testcases,omitempty"` //testcases
}

func (x *GetTestcasesByIdResp) Reset() {
	*x = GetTestcasesByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestcasesByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestcasesByIdResp) ProtoMessage() {}

func (x *GetTestcasesByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestcasesByIdResp.ProtoReflect.Descriptor instead.
func (*GetTestcasesByIdResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{41}
}

func (x *GetTestcasesByIdResp) GetTestcases() *Testcases {
	if x != nil {
		return x.Testcases
	}
	return nil
}

type SearchTestcasesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 page = 1; //page
	// int64 limit = 2; //limit
	// int64 testId = 3; //testId
	ProblemId int64 `protobuf:"varint,4,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	TestGroup int64 `protobuf:"varint,5,opt,name=testGroup,proto3" json:"testGroup,omitempty"` //testGroup
}

func (x *SearchTestcasesReq) Reset() {
	*x = SearchTestcasesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTestcasesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTestcasesReq) ProtoMessage() {}

func (x *SearchTestcasesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTestcasesReq.ProtoReflect.Descriptor instead.
func (*SearchTestcasesReq) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{42}
}

func (x *SearchTestcasesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *SearchTestcasesReq) GetTestGroup() int64 {
	if x != nil {
		return x.TestGroup
	}
	return 0
}

type SearchTestcasesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Testcases []*Testcases `protobuf:"bytes,1,rep,name=testcases,proto3" json:"testcases,omitempty"` //testcases
}

func (x *SearchTestcasesResp) Reset() {
	*x = SearchTestcasesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problem_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTestcasesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTestcasesResp) ProtoMessage() {}

func (x *SearchTestcasesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problem_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTestcasesResp.ProtoReflect.Descriptor instead.
func (*SearchTestcasesResp) Descriptor() ([]byte, []int) {
	return file_problem_proto_rawDescGZIP(), []int{43}
}

func (x *SearchTestcasesResp) GetTestcases() []*Testcases {
	if x != nil {
		return x.Testcases
	}
	return nil
}

var File_problem_proto protoreflect.FileDescriptor

var file_problem_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x03, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x61, 0x64, 0x64, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x6a, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xb0,
	0x03, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6a, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x6a, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xc1, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x6a, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x61, 0x67, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0xe4, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x6a, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x3f, 0x0a,
	0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x58,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x42, 0x79,
	0x54, 0x61, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x22, 0xc3, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6d, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x77, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x77, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x66, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x66, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x73, 0x66, 0x22, 0xae, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x77, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x77, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x66, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x66, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x73, 0x66, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a,
	0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x65, 0x69, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x4f, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x3b, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0c, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3e, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x68, 0x0a, 0x0c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x54, 0x61, 0x67, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x22, 0x36, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x41, 0x64,
	0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x65,
	0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7a, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x47, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x30, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x32, 0xb1, 0x0b, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x42, 0x79,
	0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x61,
	0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x54,
	0x61, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x67,
	0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44,
	0x65, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x61, 0x67, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x67, 0x73, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x54,
	0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x73, 0x74, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_problem_proto_rawDescOnce sync.Once
	file_problem_proto_rawDescData = file_problem_proto_rawDesc
)

func file_problem_proto_rawDescGZIP() []byte {
	file_problem_proto_rawDescOnce.Do(func() {
		file_problem_proto_rawDescData = protoimpl.X.CompressGZIP(file_problem_proto_rawDescData)
	})
	return file_problem_proto_rawDescData
}

var file_problem_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_problem_proto_goTypes = []any{
	(*Problem)(nil),                 // 0: problem.Problem
	(*AddProblemReq)(nil),           // 1: problem.AddProblemReq
	(*AddProblemResp)(nil),          // 2: problem.AddProblemResp
	(*UpdateProblemReq)(nil),        // 3: problem.UpdateProblemReq
	(*UpdateProblemResp)(nil),       // 4: problem.UpdateProblemResp
	(*DelProblemReq)(nil),           // 5: problem.DelProblemReq
	(*DelProblemResp)(nil),          // 6: problem.DelProblemResp
	(*GetProblemByIdReq)(nil),       // 7: problem.GetProblemByIdReq
	(*GetProblemByIdResp)(nil),      // 8: problem.GetProblemByIdResp
	(*SearchProblemReq)(nil),        // 9: problem.SearchProblemReq
	(*SearchProblemResp)(nil),       // 10: problem.SearchProblemResp
	(*ListProblemsByTagIdReq)(nil),  // 11: problem.ListProblemsByTagIdReq
	(*ListProblemsByTagIdResp)(nil), // 12: problem.ListProblemsByTagIdResp
	(*Problemdata)(nil),             // 13: problem.Problemdata
	(*UpdateProblemdataReq)(nil),    // 14: problem.UpdateProblemdataReq
	(*UpdateProblemdataResp)(nil),   // 15: problem.UpdateProblemdataResp
	(*GetProblemdataByIdReq)(nil),   // 16: problem.GetProblemdataByIdReq
	(*GetProblemdataByIdResp)(nil),  // 17: problem.GetProblemdataByIdResp
	(*SearchProblemdataReq)(nil),    // 18: problem.SearchProblemdataReq
	(*SearchProblemdataResp)(nil),   // 19: problem.SearchProblemdataResp
	(*Tag)(nil),                     // 20: problem.Tag
	(*AddTagReq)(nil),               // 21: problem.AddTagReq
	(*AddTagResp)(nil),              // 22: problem.AddTagResp
	(*UpdateTagReq)(nil),            // 23: problem.UpdateTagReq
	(*UpdateTagResp)(nil),           // 24: problem.UpdateTagResp
	(*DelTagReq)(nil),               // 25: problem.DelTagReq
	(*DelTagResp)(nil),              // 26: problem.DelTagResp
	(*GetTagByIdReq)(nil),           // 27: problem.GetTagByIdReq
	(*GetTagByIdResp)(nil),          // 28: problem.GetTagByIdResp
	(*SearchTagReq)(nil),            // 29: problem.SearchTagReq
	(*SearchTagResp)(nil),           // 30: problem.SearchTagResp
	(*ListTagsByProblemIdReq)(nil),  // 31: problem.ListTagsByProblemIdReq
	(*ListTagsByProblemIdResp)(nil), // 32: problem.ListTagsByProblemIdResp
	(*Testcases)(nil),               // 33: problem.Testcases
	(*AddTestcasesReq)(nil),         // 34: problem.AddTestcasesReq
	(*AddTestcasesResp)(nil),        // 35: problem.AddTestcasesResp
	(*UpdateTestcasesReq)(nil),      // 36: problem.UpdateTestcasesReq
	(*UpdateTestcasesResp)(nil),     // 37: problem.UpdateTestcasesResp
	(*DelTestcasesReq)(nil),         // 38: problem.DelTestcasesReq
	(*DelTestcasesResp)(nil),        // 39: problem.DelTestcasesResp
	(*GetTestcasesByIdReq)(nil),     // 40: problem.GetTestcasesByIdReq
	(*GetTestcasesByIdResp)(nil),    // 41: problem.GetTestcasesByIdResp
	(*SearchTestcasesReq)(nil),      // 42: problem.SearchTestcasesReq
	(*SearchTestcasesResp)(nil),     // 43: problem.SearchTestcasesResp
	(*timestamppb.Timestamp)(nil),   // 44: google.protobuf.Timestamp
}
var file_problem_proto_depIdxs = []int32{
	44, // 0: problem.Problem.addtime:type_name -> google.protobuf.Timestamp
	0,  // 1: problem.GetProblemByIdResp.problem:type_name -> problem.Problem
	0,  // 2: problem.SearchProblemResp.problem:type_name -> problem.Problem
	0,  // 3: problem.ListProblemsByTagIdResp.problems:type_name -> problem.Problem
	13, // 4: problem.GetProblemdataByIdResp.problemdata:type_name -> problem.Problemdata
	13, // 5: problem.SearchProblemdataResp.problemdata:type_name -> problem.Problemdata
	20, // 6: problem.GetTagByIdResp.tag:type_name -> problem.Tag
	20, // 7: problem.SearchTagResp.tag:type_name -> problem.Tag
	20, // 8: problem.ListTagsByProblemIdResp.tags:type_name -> problem.Tag
	33, // 9: problem.GetTestcasesByIdResp.testcases:type_name -> problem.Testcases
	33, // 10: problem.SearchTestcasesResp.testcases:type_name -> problem.Testcases
	1,  // 11: problem.problem_service.AddProblem:input_type -> problem.AddProblemReq
	3,  // 12: problem.problem_service.UpdateProblem:input_type -> problem.UpdateProblemReq
	5,  // 13: problem.problem_service.DelProblem:input_type -> problem.DelProblemReq
	7,  // 14: problem.problem_service.GetProblemById:input_type -> problem.GetProblemByIdReq
	9,  // 15: problem.problem_service.SearchProblem:input_type -> problem.SearchProblemReq
	11, // 16: problem.problem_service.ListProblemsByTagId:input_type -> problem.ListProblemsByTagIdReq
	14, // 17: problem.problem_service.UpdateProblemdata:input_type -> problem.UpdateProblemdataReq
	16, // 18: problem.problem_service.GetProblemdataById:input_type -> problem.GetProblemdataByIdReq
	18, // 19: problem.problem_service.SearchProblemdata:input_type -> problem.SearchProblemdataReq
	21, // 20: problem.problem_service.AddTag:input_type -> problem.AddTagReq
	23, // 21: problem.problem_service.UpdateTag:input_type -> problem.UpdateTagReq
	25, // 22: problem.problem_service.DelTag:input_type -> problem.DelTagReq
	27, // 23: problem.problem_service.GetTagById:input_type -> problem.GetTagByIdReq
	29, // 24: problem.problem_service.SearchTag:input_type -> problem.SearchTagReq
	31, // 25: problem.problem_service.ListTagsByProblemId:input_type -> problem.ListTagsByProblemIdReq
	34, // 26: problem.problem_service.AddTestcases:input_type -> problem.AddTestcasesReq
	36, // 27: problem.problem_service.UpdateTestcases:input_type -> problem.UpdateTestcasesReq
	38, // 28: problem.problem_service.DelTestcases:input_type -> problem.DelTestcasesReq
	40, // 29: problem.problem_service.GetTestcasesById:input_type -> problem.GetTestcasesByIdReq
	42, // 30: problem.problem_service.SearchTestcases:input_type -> problem.SearchTestcasesReq
	2,  // 31: problem.problem_service.AddProblem:output_type -> problem.AddProblemResp
	4,  // 32: problem.problem_service.UpdateProblem:output_type -> problem.UpdateProblemResp
	6,  // 33: problem.problem_service.DelProblem:output_type -> problem.DelProblemResp
	8,  // 34: problem.problem_service.GetProblemById:output_type -> problem.GetProblemByIdResp
	10, // 35: problem.problem_service.SearchProblem:output_type -> problem.SearchProblemResp
	12, // 36: problem.problem_service.ListProblemsByTagId:output_type -> problem.ListProblemsByTagIdResp
	15, // 37: problem.problem_service.UpdateProblemdata:output_type -> problem.UpdateProblemdataResp
	17, // 38: problem.problem_service.GetProblemdataById:output_type -> problem.GetProblemdataByIdResp
	19, // 39: problem.problem_service.SearchProblemdata:output_type -> problem.SearchProblemdataResp
	22, // 40: problem.problem_service.AddTag:output_type -> problem.AddTagResp
	24, // 41: problem.problem_service.UpdateTag:output_type -> problem.UpdateTagResp
	26, // 42: problem.problem_service.DelTag:output_type -> problem.DelTagResp
	28, // 43: problem.problem_service.GetTagById:output_type -> problem.GetTagByIdResp
	30, // 44: problem.problem_service.SearchTag:output_type -> problem.SearchTagResp
	32, // 45: problem.problem_service.ListTagsByProblemId:output_type -> problem.ListTagsByProblemIdResp
	35, // 46: problem.problem_service.AddTestcases:output_type -> problem.AddTestcasesResp
	37, // 47: problem.problem_service.UpdateTestcases:output_type -> problem.UpdateTestcasesResp
	39, // 48: problem.problem_service.DelTestcases:output_type -> problem.DelTestcasesResp
	41, // 49: problem.problem_service.GetTestcasesById:output_type -> problem.GetTestcasesByIdResp
	43, // 50: problem.problem_service.SearchTestcases:output_type -> problem.SearchTestcasesResp
	31, // [31:51] is the sub-list for method output_type
	11, // [11:31] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_problem_proto_init() }
func file_problem_proto_init() {
	if File_problem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_problem_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DelProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DelProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListProblemsByTagIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListProblemsByTagIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Problemdata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemdataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemdataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemdataByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemdataByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemdataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemdataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DelTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*DelTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetTagByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetTagByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*ListTagsByProblemIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*ListTagsByProblemIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Testcases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*AddTestcasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*AddTestcasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTestcasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTestcasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*DelTestcasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*DelTestcasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*GetTestcasesByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*GetTestcasesByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTestcasesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problem_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTestcasesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_problem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_problem_proto_goTypes,
		DependencyIndexes: file_problem_proto_depIdxs,
		MessageInfos:      file_problem_proto_msgTypes,
	}.Build()
	File_problem_proto = out.File
	file_problem_proto_rawDesc = nil
	file_problem_proto_goTypes = nil
	file_problem_proto_depIdxs = nil
}
