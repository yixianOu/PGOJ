// Code generated by goctl. DO NOT EDIT.
// Source: judgestatus.proto

package judgeservice

import (
	"context"

	"oj-micro/judgeStatus/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddJudgestatusReq      = pb.AddJudgestatusReq
	AddJudgestatusResp     = pb.AddJudgestatusResp
	DelJudgestatusReq      = pb.DelJudgestatusReq
	DelJudgestatusResp     = pb.DelJudgestatusResp
	GetJudgestatusByIdReq  = pb.GetJudgestatusByIdReq
	GetJudgestatusByIdResp = pb.GetJudgestatusByIdResp
	Judgestatus            = pb.Judgestatus
	SearchJudgestatusReq   = pb.SearchJudgestatusReq
	SearchJudgestatusResp  = pb.SearchJudgestatusResp
	UpdateJudgestatusReq   = pb.UpdateJudgestatusReq
	UpdateJudgestatusResp  = pb.UpdateJudgestatusResp

	JudgeService interface {
		// -----------------------judgestatus-----------------------
		AddJudgestatus(ctx context.Context, in *AddJudgestatusReq, opts ...grpc.CallOption) (pb.JudgeService_AddJudgestatusClient, error)
		UpdateJudgestatus(ctx context.Context, in *UpdateJudgestatusReq, opts ...grpc.CallOption) (*UpdateJudgestatusResp, error)
		DelJudgestatus(ctx context.Context, in *DelJudgestatusReq, opts ...grpc.CallOption) (*DelJudgestatusResp, error)
		GetJudgestatusById(ctx context.Context, in *GetJudgestatusByIdReq, opts ...grpc.CallOption) (*GetJudgestatusByIdResp, error)
		SearchJudgestatus(ctx context.Context, in *SearchJudgestatusReq, opts ...grpc.CallOption) (*SearchJudgestatusResp, error)
	}

	defaultJudgeService struct {
		cli zrpc.Client
	}
)

func NewJudgeService(cli zrpc.Client) JudgeService {
	return &defaultJudgeService{
		cli: cli,
	}
}

// -----------------------judgestatus-----------------------
func (m *defaultJudgeService) AddJudgestatus(ctx context.Context, in *AddJudgestatusReq, opts ...grpc.CallOption) (pb.JudgeService_AddJudgestatusClient, error) {
	client := pb.NewJudgeServiceClient(m.cli.Conn())
	return client.AddJudgestatus(ctx, in, opts...)
}

func (m *defaultJudgeService) UpdateJudgestatus(ctx context.Context, in *UpdateJudgestatusReq, opts ...grpc.CallOption) (*UpdateJudgestatusResp, error) {
	client := pb.NewJudgeServiceClient(m.cli.Conn())
	return client.UpdateJudgestatus(ctx, in, opts...)
}

func (m *defaultJudgeService) DelJudgestatus(ctx context.Context, in *DelJudgestatusReq, opts ...grpc.CallOption) (*DelJudgestatusResp, error) {
	client := pb.NewJudgeServiceClient(m.cli.Conn())
	return client.DelJudgestatus(ctx, in, opts...)
}

func (m *defaultJudgeService) GetJudgestatusById(ctx context.Context, in *GetJudgestatusByIdReq, opts ...grpc.CallOption) (*GetJudgestatusByIdResp, error) {
	client := pb.NewJudgeServiceClient(m.cli.Conn())
	return client.GetJudgestatusById(ctx, in, opts...)
}

func (m *defaultJudgeService) SearchJudgestatus(ctx context.Context, in *SearchJudgestatusReq, opts ...grpc.CallOption) (*SearchJudgestatusResp, error) {
	client := pb.NewJudgeServiceClient(m.cli.Conn())
	return client.SearchJudgestatus(ctx, in, opts...)
}
