// Code generated by goctl. DO NOT EDIT.
package types

type DeleteJudgeStatusRequest struct {
	JudgeId int64 `path:"judge_id"`
}

type DeleteJudgeStatusResponse struct {
}

type GetJudgeStatusRequest struct {
	JudgeId int64 `path:"judge_id"`
}

type GetJudgeStatusResponse struct {
	JudgeStatus struct {
		JudgeId        int64
		UserId         int64
		ProblemId      int64
		ProblemTitle   string
		Oj             string
		Result         string
		TimeCost       int64
		MemoryCost     int64
		Length         int64
		Language       string
		SubmitTime     int64
		Judger         string
		Contest        int64
		ContestProblem int64
		Code           string
		TestCases      string
		Message        string
		Rating         int64
		Ip             string
		InputData      string
		SampleOutput   string
		UserOutput     string
	} `json:"judge_status"`
}

type JudgeStatus struct {
	JudgeId        int64
	UserId         int64
	ProblemId      int64
	ProblemTitle   string
	Oj             string
	Result         string
	TimeCost       int64
	MemoryCost     int64
	Length         int64
	Language       string
	SubmitTime     int64
	Judger         string
	Contest        int64
	ContestProblem int64
	Code           string
	TestCases      string
	Message        string
	Rating         int64
	Ip             string
	InputData      string
	SampleOutput   string
	UserOutput     string
}

type ListJudgeStatusRequest struct {
	Page         int64  `form:"page,default=1"`
	Limit        int64  `form:"limit,default=10"`
	UserId       int64  `form:"user_id"`
	ProblemId    int64  `form:"problem_id,optinal"`
	Result       string `form:"result,optional"`
	Language     string `form:"language,optional"`
	SubmitTime   int64  `form:"submit_time,optional"`
	Contest      int64  `form:"contest,optional"`
	ProblemTitle string `form:"problem_title,optional"`
	Order        bool   `form:"order,optinal"`
}

type ListJudgeStatusResponse struct {
	JudgeStatus []JudgeStatus `json:"judge_status"`
}

type SendJudgeStatusRequest struct {
	ProblemId      int64  `form:"problem_id"`
	ProblemTitle   string `form:"problem_title,optional"`
	Oj             string `form:"oj,optional"`
	Language       string `form:"language"`
	Code           string `form:"code"`
	Length         int64  `form:"length,optinal"`
	Contest        int64  `form:"contest,default=0"`
	ContestProblem int64  `form:"contest_problem,default=0"`
	Rating         int64  `form:"rating,optinal"`
	Ip             string `form:"ip,optional"`
}

type SendJudgeStatusResponse struct {
	JudgeStatus struct {
		JudgeId        int64
		UserId         int64
		ProblemId      int64
		ProblemTitle   string
		Oj             string
		Result         string
		TimeCost       int64
		MemoryCost     int64
		Length         int64
		Language       string
		SubmitTime     int64
		Judger         string
		Contest        int64
		ContestProblem int64
		Code           string
		TestCases      string
		Message        string
		Rating         int64
		Ip             string
		InputData      string
		SampleOutput   string
		UserOutput     string
	} `json:"judge_status"`
}
