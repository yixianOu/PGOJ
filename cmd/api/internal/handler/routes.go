// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	other "oj-micro/users/cmd/api/internal/handler/other"
	users_info "oj-micro/users/cmd/api/internal/handler/users_info"
	users_profile "oj-micro/users/cmd/api/internal/handler/users_profile"
	"oj-micro/users/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 发送邮件
				Method:  http.MethodGet,
				Path:    "/users/email",
				Handler: other.SendEmailToUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取用户列表
				Method:  http.MethodGet,
				Path:    "/users",
				Handler: users_info.ListUserHandler(serverCtx),
			},
			{
				// 创建用户
				Method:  http.MethodPost,
				Path:    "/users",
				Handler: users_info.CreateUserHandler(serverCtx),
			},
			{
				// 用户验证码登录
				Method:  http.MethodPost,
				Path:    "/users/email/login",
				Handler: users_info.LoginWithCodeHandler(serverCtx),
			},
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/users/login",
				Handler: users_info.LoginUserHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取用户基础信息
				Method:  http.MethodGet,
				Path:    "/users/:user_id",
				Handler: users_info.GetUserInfoHandler(serverCtx),
			},
			{
				// 更新用户基础信息
				Method:  http.MethodPost,
				Path:    "/users/:user_id",
				Handler: users_info.UpdateUserInfoHandler(serverCtx),
			},
			{
				// 删除用户
				Method:  http.MethodDelete,
				Path:    "/users/:user_id",
				Handler: users_info.DeleteUserHandler(serverCtx),
			},
			{
				// 授权用户
				Method:  http.MethodPost,
				Path:    "/users/:user_id/authenticate",
				Handler: users_info.AuthenticateUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 更新用户详细信息
				Method:  http.MethodPost,
				Path:    "/users/:user_id/profile",
				Handler: users_profile.UpdateProfileHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取用户详细信息
				Method:  http.MethodGet,
				Path:    "/users/:user_id/profile",
				Handler: users_profile.GetProfileHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api1"),
	)
}
