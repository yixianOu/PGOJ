// Code generated by goctl. DO NOT EDIT.
// Source: problem.proto

package server

import (
	"context"

	"oj-micro/problems/cmd/rpc/internal/logic"
	"oj-micro/problems/cmd/rpc/internal/svc"
	"oj-micro/problems/cmd/rpc/pb"
)

type ProblemServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedProblemServiceServer
}

func NewProblemServiceServer(svcCtx *svc.ServiceContext) *ProblemServiceServer {
	return &ProblemServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ProblemServiceServer) AddProblem(ctx context.Context, in *pb.AddProblemReq) (*pb.AddProblemResp, error) {
	l := logic.NewAddProblemLogic(ctx, s.svcCtx)
	return l.AddProblem(in)
}

func (s *ProblemServiceServer) UpdateProblem(ctx context.Context, in *pb.UpdateProblemReq) (*pb.UpdateProblemResp, error) {
	l := logic.NewUpdateProblemLogic(ctx, s.svcCtx)
	return l.UpdateProblem(in)
}

func (s *ProblemServiceServer) DelProblem(ctx context.Context, in *pb.DelProblemReq) (*pb.DelProblemResp, error) {
	l := logic.NewDelProblemLogic(ctx, s.svcCtx)
	return l.DelProblem(in)
}

func (s *ProblemServiceServer) GetProblemById(ctx context.Context, in *pb.GetProblemByIdReq) (*pb.GetProblemByIdResp, error) {
	l := logic.NewGetProblemByIdLogic(ctx, s.svcCtx)
	return l.GetProblemById(in)
}

func (s *ProblemServiceServer) SearchProblem(ctx context.Context, in *pb.SearchProblemReq) (*pb.SearchProblemResp, error) {
	l := logic.NewSearchProblemLogic(ctx, s.svcCtx)
	return l.SearchProblem(in)
}

func (s *ProblemServiceServer) ListProblemsByTagId(ctx context.Context, in *pb.ListProblemsByTagIdReq) (*pb.ListProblemsByTagIdResp, error) {
	l := logic.NewListProblemsByTagIdLogic(ctx, s.svcCtx)
	return l.ListProblemsByTagId(in)
}

// -----------------------problemTag-----------------------
func (s *ProblemServiceServer) UpdateProblemdata(ctx context.Context, in *pb.UpdateProblemdataReq) (*pb.UpdateProblemdataResp, error) {
	l := logic.NewUpdateProblemdataLogic(ctx, s.svcCtx)
	return l.UpdateProblemdata(in)
}

// rpc DelProblemdata(DelProblemdataReq) returns (DelProblemdataResp);
func (s *ProblemServiceServer) GetProblemdataById(ctx context.Context, in *pb.GetProblemdataByIdReq) (*pb.GetProblemdataByIdResp, error) {
	l := logic.NewGetProblemdataByIdLogic(ctx, s.svcCtx)
	return l.GetProblemdataById(in)
}

func (s *ProblemServiceServer) GetProblemdataByProblemId(ctx context.Context, in *pb.GetProblemdataByProblemIdReq) (*pb.GetProblemdataByProblemIdResp, error) {
	l := logic.NewGetProblemdataByProblemIdLogic(ctx, s.svcCtx)
	return l.GetProblemdataByProblemId(in)
}

func (s *ProblemServiceServer) SearchProblemdata(ctx context.Context, in *pb.SearchProblemdataReq) (*pb.SearchProblemdataResp, error) {
	l := logic.NewSearchProblemdataLogic(ctx, s.svcCtx)
	return l.SearchProblemdata(in)
}

func (s *ProblemServiceServer) AddTag(ctx context.Context, in *pb.AddTagReq) (*pb.AddTagResp, error) {
	l := logic.NewAddTagLogic(ctx, s.svcCtx)
	return l.AddTag(in)
}

func (s *ProblemServiceServer) UpdateTag(ctx context.Context, in *pb.UpdateTagReq) (*pb.UpdateTagResp, error) {
	l := logic.NewUpdateTagLogic(ctx, s.svcCtx)
	return l.UpdateTag(in)
}

func (s *ProblemServiceServer) DelTag(ctx context.Context, in *pb.DelTagReq) (*pb.DelTagResp, error) {
	l := logic.NewDelTagLogic(ctx, s.svcCtx)
	return l.DelTag(in)
}

func (s *ProblemServiceServer) GetTagById(ctx context.Context, in *pb.GetTagByIdReq) (*pb.GetTagByIdResp, error) {
	l := logic.NewGetTagByIdLogic(ctx, s.svcCtx)
	return l.GetTagById(in)
}

func (s *ProblemServiceServer) SearchTag(ctx context.Context, in *pb.SearchTagReq) (*pb.SearchTagResp, error) {
	l := logic.NewSearchTagLogic(ctx, s.svcCtx)
	return l.SearchTag(in)
}

func (s *ProblemServiceServer) ListTagsByProblemId(ctx context.Context, in *pb.ListTagsByProblemIdReq) (*pb.ListTagsByProblemIdResp, error) {
	l := logic.NewListTagsByProblemIdLogic(ctx, s.svcCtx)
	return l.ListTagsByProblemId(in)
}

func (s *ProblemServiceServer) AddTestcases(ctx context.Context, in *pb.AddTestcasesReq) (*pb.AddTestcasesResp, error) {
	l := logic.NewAddTestcasesLogic(ctx, s.svcCtx)
	return l.AddTestcases(in)
}

func (s *ProblemServiceServer) UpdateTestcases(ctx context.Context, in *pb.UpdateTestcasesReq) (*pb.UpdateTestcasesResp, error) {
	l := logic.NewUpdateTestcasesLogic(ctx, s.svcCtx)
	return l.UpdateTestcases(in)
}

func (s *ProblemServiceServer) DelTestcases(ctx context.Context, in *pb.DelTestcasesReq) (*pb.DelTestcasesResp, error) {
	l := logic.NewDelTestcasesLogic(ctx, s.svcCtx)
	return l.DelTestcases(in)
}

func (s *ProblemServiceServer) GetTestcasesById(ctx context.Context, in *pb.GetTestcasesByIdReq) (*pb.GetTestcasesByIdResp, error) {
	l := logic.NewGetTestcasesByIdLogic(ctx, s.svcCtx)
	return l.GetTestcasesById(in)
}

func (s *ProblemServiceServer) SearchTestcases(ctx context.Context, in *pb.SearchTestcasesReq) (*pb.SearchTestcasesResp, error) {
	l := logic.NewSearchTestcasesLogic(ctx, s.svcCtx)
	return l.SearchTestcases(in)
}
