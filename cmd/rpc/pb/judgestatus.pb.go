// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: judgestatus.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------judgestatus--------------------------------
type Judgestatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeId        int64  `protobuf:"varint,1,opt,name=judgeId,proto3" json:"judgeId,omitempty"`                //judgeId
	UserId         int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`                  //userId
	ProblemId      int64  `protobuf:"varint,3,opt,name=problemId,proto3" json:"problemId,omitempty"`            //problemId
	Oj             string `protobuf:"bytes,4,opt,name=oj,proto3" json:"oj,omitempty"`                           //oj
	Result         string `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`                   //result
	TimeCost       int64  `protobuf:"varint,6,opt,name=timeCost,proto3" json:"timeCost,omitempty"`              //time
	MemoryCost     int64  `protobuf:"varint,7,opt,name=memoryCost,proto3" json:"memoryCost,omitempty"`          //memory
	Length         int64  `protobuf:"varint,8,opt,name=length,proto3" json:"length,omitempty"`                  //length
	Language       string `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"`               //language
	SubmitTime     int64  `protobuf:"varint,10,opt,name=submitTime,proto3" json:"submitTime,omitempty"`         //submittime
	Judger         string `protobuf:"bytes,11,opt,name=judger,proto3" json:"judger,omitempty"`                  //judger
	Contest        int64  `protobuf:"varint,12,opt,name=contest,proto3" json:"contest,omitempty"`               //contest
	ContestProblem int64  `protobuf:"varint,13,opt,name=contestProblem,proto3" json:"contestProblem,omitempty"` //contestproblem
	Code           string `protobuf:"bytes,14,opt,name=code,proto3" json:"code,omitempty"`                      //code
	TestCases      string `protobuf:"bytes,15,opt,name=testCases,proto3" json:"testCases,omitempty"`            //testcase
	Message        string `protobuf:"bytes,16,opt,name=message,proto3" json:"message,omitempty"`                //message
	ProblemTitle   string `protobuf:"bytes,17,opt,name=problemTitle,proto3" json:"problemTitle,omitempty"`      //problemtitle
	Rating         int64  `protobuf:"varint,18,opt,name=rating,proto3" json:"rating,omitempty"`                 //rating
	Ip             string `protobuf:"bytes,19,opt,name=ip,proto3" json:"ip,omitempty"`                          //ip
	InputData      string `protobuf:"bytes,20,opt,name=inputData,proto3" json:"inputData,omitempty"`            //inputData
	SampleOutput   string `protobuf:"bytes,21,opt,name=sampleOutput,proto3" json:"sampleOutput,omitempty"`      //sampleOutPut
	UserOutput     string `protobuf:"bytes,22,opt,name=userOutput,proto3" json:"userOutput,omitempty"`          //userOutPut
}

func (x *Judgestatus) Reset() {
	*x = Judgestatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Judgestatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Judgestatus) ProtoMessage() {}

func (x *Judgestatus) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Judgestatus.ProtoReflect.Descriptor instead.
func (*Judgestatus) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{0}
}

func (x *Judgestatus) GetJudgeId() int64 {
	if x != nil {
		return x.JudgeId
	}
	return 0
}

func (x *Judgestatus) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Judgestatus) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *Judgestatus) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *Judgestatus) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Judgestatus) GetTimeCost() int64 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *Judgestatus) GetMemoryCost() int64 {
	if x != nil {
		return x.MemoryCost
	}
	return 0
}

func (x *Judgestatus) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Judgestatus) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Judgestatus) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *Judgestatus) GetJudger() string {
	if x != nil {
		return x.Judger
	}
	return ""
}

func (x *Judgestatus) GetContest() int64 {
	if x != nil {
		return x.Contest
	}
	return 0
}

func (x *Judgestatus) GetContestProblem() int64 {
	if x != nil {
		return x.ContestProblem
	}
	return 0
}

func (x *Judgestatus) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Judgestatus) GetTestCases() string {
	if x != nil {
		return x.TestCases
	}
	return ""
}

func (x *Judgestatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Judgestatus) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *Judgestatus) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Judgestatus) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Judgestatus) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *Judgestatus) GetSampleOutput() string {
	if x != nil {
		return x.SampleOutput
	}
	return ""
}

func (x *Judgestatus) GetUserOutput() string {
	if x != nil {
		return x.UserOutput
	}
	return ""
}

type AddJudgestatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int64 judgeId = 1; //judgeId
	UserId    int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`       //userId
	ProblemId int64  `protobuf:"varint,3,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	Oj        string `protobuf:"bytes,4,opt,name=oj,proto3" json:"oj,omitempty"`                //oj
	// int64 result = 5; //result
	// int64 time = 6; //time
	// int64 memory = 7; //memory
	Length   int64  `protobuf:"varint,8,opt,name=length,proto3" json:"length,omitempty"`    //length
	Language string `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"` //language
	// int64 submittime = 10; //submittime
	Judger         string `protobuf:"bytes,11,opt,name=judger,proto3" json:"judger,omitempty"`                  //judger
	Contest        int64  `protobuf:"varint,12,opt,name=contest,proto3" json:"contest,omitempty"`               //contest
	ContestProblem int64  `protobuf:"varint,13,opt,name=contestProblem,proto3" json:"contestProblem,omitempty"` //contestproblem
	Code           string `protobuf:"bytes,14,opt,name=code,proto3" json:"code,omitempty"`                      //code
	// string testcase = 15; //testcase
	// string message = 16; //message
	ProblemTitle string `protobuf:"bytes,17,opt,name=problemTitle,proto3" json:"problemTitle,omitempty"` //problemtitle
	Rating       int64  `protobuf:"varint,18,opt,name=rating,proto3" json:"rating,omitempty"`            //rating
	Ip           string `protobuf:"bytes,19,opt,name=ip,proto3" json:"ip,omitempty"`                     //ip
	TimeLimit    int64  `protobuf:"varint,20,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`      //timeLimit
	MemoryLimit  int64  `protobuf:"varint,21,opt,name=memoryLimit,proto3" json:"memoryLimit,omitempty"`  //memoryLimit
	ProblemCode  string `protobuf:"bytes,22,opt,name=problemCode,proto3" json:"problemCode,omitempty"`   //problemCode
	CaseNum      int64  `protobuf:"varint,23,opt,name=CaseNum,proto3" json:"CaseNum,omitempty"`          //TestCaseNum
}

func (x *AddJudgestatusReq) Reset() {
	*x = AddJudgestatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgestatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgestatusReq) ProtoMessage() {}

func (x *AddJudgestatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgestatusReq.ProtoReflect.Descriptor instead.
func (*AddJudgestatusReq) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{1}
}

func (x *AddJudgestatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddJudgestatusReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddJudgestatusReq) GetOj() string {
	if x != nil {
		return x.Oj
	}
	return ""
}

func (x *AddJudgestatusReq) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AddJudgestatusReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddJudgestatusReq) GetJudger() string {
	if x != nil {
		return x.Judger
	}
	return ""
}

func (x *AddJudgestatusReq) GetContest() int64 {
	if x != nil {
		return x.Contest
	}
	return 0
}

func (x *AddJudgestatusReq) GetContestProblem() int64 {
	if x != nil {
		return x.ContestProblem
	}
	return 0
}

func (x *AddJudgestatusReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddJudgestatusReq) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *AddJudgestatusReq) GetRating() int64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *AddJudgestatusReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddJudgestatusReq) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *AddJudgestatusReq) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *AddJudgestatusReq) GetProblemCode() string {
	if x != nil {
		return x.ProblemCode
	}
	return ""
}

func (x *AddJudgestatusReq) GetCaseNum() int64 {
	if x != nil {
		return x.CaseNum
	}
	return 0
}

type AddJudgestatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeId int64 `protobuf:"varint,1,opt,name=judgeId,proto3" json:"judgeId,omitempty"` //judgeId
	// int64 userId = 2; //userId
	// int64 problemId = 3; //problemId
	// string oj = 4; //oj
	Result     string `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`          //result
	TimeCost   int64  `protobuf:"varint,6,opt,name=timeCost,proto3" json:"timeCost,omitempty"`     //time
	MemoryCost int64  `protobuf:"varint,7,opt,name=memoryCost,proto3" json:"memoryCost,omitempty"` //memory
	// int64 length = 8; //length
	// string language = 9; //language
	// int64 submittime = 10; //submittime
	// string judger = 11; //judger
	// int64 contest = 12; //contest
	// int64 contestproblem = 13; //contestproblem
	// string code = 14; //code
	TestCase int64  `protobuf:"varint,15,opt,name=testCase,proto3" json:"testCase,omitempty"` //testcase
	Message  string `protobuf:"bytes,16,opt,name=message,proto3" json:"message,omitempty"`    //message
	// string problemtitle = 17; //problemtitle
	// int64 rating = 18; //rating
	// string ip = 19; //ip
	InputData    string `protobuf:"bytes,20,opt,name=inputData,proto3" json:"inputData,omitempty"`       //inputData
	SampleOutput string `protobuf:"bytes,21,opt,name=sampleOutput,proto3" json:"sampleOutput,omitempty"` //sampleOutPut
	UserOutput   string `protobuf:"bytes,22,opt,name=userOutput,proto3" json:"userOutput,omitempty"`     //userOutPut
}

func (x *AddJudgestatusResp) Reset() {
	*x = AddJudgestatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgestatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgestatusResp) ProtoMessage() {}

func (x *AddJudgestatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgestatusResp.ProtoReflect.Descriptor instead.
func (*AddJudgestatusResp) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{2}
}

func (x *AddJudgestatusResp) GetJudgeId() int64 {
	if x != nil {
		return x.JudgeId
	}
	return 0
}

func (x *AddJudgestatusResp) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AddJudgestatusResp) GetTimeCost() int64 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *AddJudgestatusResp) GetMemoryCost() int64 {
	if x != nil {
		return x.MemoryCost
	}
	return 0
}

func (x *AddJudgestatusResp) GetTestCase() int64 {
	if x != nil {
		return x.TestCase
	}
	return 0
}

func (x *AddJudgestatusResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddJudgestatusResp) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *AddJudgestatusResp) GetSampleOutput() string {
	if x != nil {
		return x.SampleOutput
	}
	return ""
}

func (x *AddJudgestatusResp) GetUserOutput() string {
	if x != nil {
		return x.UserOutput
	}
	return ""
}

type UpdateJudgestatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeId int64 `protobuf:"varint,1,opt,name=judgeId,proto3" json:"judgeId,omitempty"` //judgeId
	// int64 userId = 2; //userId
	// int64 problemId = 3; //problemId
	// string oj = 4; //oj
	Result     string `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`          //result
	TimeCost   int64  `protobuf:"varint,6,opt,name=timeCost,proto3" json:"timeCost,omitempty"`     //time
	MemoryCost int64  `protobuf:"varint,7,opt,name=memoryCost,proto3" json:"memoryCost,omitempty"` //memory
	// int64 length = 8; //length
	// string language = 9; //language
	// int64 submittime = 10; //submittime
	// string judger = 11; //judger
	// int64 contest = 12; //contest
	// int64 contestproblem = 13; //contestproblem
	// string code = 14; //code
	TestCases string `protobuf:"bytes,15,opt,name=testCases,proto3" json:"testCases,omitempty"` //testcase
	Message   string `protobuf:"bytes,16,opt,name=message,proto3" json:"message,omitempty"`     //message
	// string problemtitle = 17; //problemtitle
	// int64 rating = 18; //rating
	// string ip = 19; //ip
	InputData    string `protobuf:"bytes,20,opt,name=inputData,proto3" json:"inputData,omitempty"`       //inputData
	SampleOutput string `protobuf:"bytes,21,opt,name=sampleOutput,proto3" json:"sampleOutput,omitempty"` //sampleOutPut
	UserOutput   string `protobuf:"bytes,22,opt,name=userOutput,proto3" json:"userOutput,omitempty"`     //userOutPut
}

func (x *UpdateJudgestatusReq) Reset() {
	*x = UpdateJudgestatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgestatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgestatusReq) ProtoMessage() {}

func (x *UpdateJudgestatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgestatusReq.ProtoReflect.Descriptor instead.
func (*UpdateJudgestatusReq) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateJudgestatusReq) GetJudgeId() int64 {
	if x != nil {
		return x.JudgeId
	}
	return 0
}

func (x *UpdateJudgestatusReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *UpdateJudgestatusReq) GetTimeCost() int64 {
	if x != nil {
		return x.TimeCost
	}
	return 0
}

func (x *UpdateJudgestatusReq) GetMemoryCost() int64 {
	if x != nil {
		return x.MemoryCost
	}
	return 0
}

func (x *UpdateJudgestatusReq) GetTestCases() string {
	if x != nil {
		return x.TestCases
	}
	return ""
}

func (x *UpdateJudgestatusReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateJudgestatusReq) GetInputData() string {
	if x != nil {
		return x.InputData
	}
	return ""
}

func (x *UpdateJudgestatusReq) GetSampleOutput() string {
	if x != nil {
		return x.SampleOutput
	}
	return ""
}

func (x *UpdateJudgestatusReq) GetUserOutput() string {
	if x != nil {
		return x.UserOutput
	}
	return ""
}

type UpdateJudgestatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJudgestatusResp) Reset() {
	*x = UpdateJudgestatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgestatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgestatusResp) ProtoMessage() {}

func (x *UpdateJudgestatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgestatusResp.ProtoReflect.Descriptor instead.
func (*UpdateJudgestatusResp) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{4}
}

type DelJudgestatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelJudgestatusReq) Reset() {
	*x = DelJudgestatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelJudgestatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelJudgestatusReq) ProtoMessage() {}

func (x *DelJudgestatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelJudgestatusReq.ProtoReflect.Descriptor instead.
func (*DelJudgestatusReq) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{5}
}

func (x *DelJudgestatusReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelJudgestatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelJudgestatusResp) Reset() {
	*x = DelJudgestatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelJudgestatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelJudgestatusResp) ProtoMessage() {}

func (x *DelJudgestatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelJudgestatusResp.ProtoReflect.Descriptor instead.
func (*DelJudgestatusResp) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{6}
}

type GetJudgestatusByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetJudgestatusByIdReq) Reset() {
	*x = GetJudgestatusByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgestatusByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgestatusByIdReq) ProtoMessage() {}

func (x *GetJudgestatusByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgestatusByIdReq.ProtoReflect.Descriptor instead.
func (*GetJudgestatusByIdReq) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{7}
}

func (x *GetJudgestatusByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetJudgestatusByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Judgestatus *Judgestatus `protobuf:"bytes,1,opt,name=judgestatus,proto3" json:"judgestatus,omitempty"` //judgestatus
}

func (x *GetJudgestatusByIdResp) Reset() {
	*x = GetJudgestatusByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgestatusByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgestatusByIdResp) ProtoMessage() {}

func (x *GetJudgestatusByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgestatusByIdResp.ProtoReflect.Descriptor instead.
func (*GetJudgestatusByIdResp) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{8}
}

func (x *GetJudgestatusByIdResp) GetJudgestatus() *Judgestatus {
	if x != nil {
		return x.Judgestatus
	}
	return nil
}

type SearchJudgestatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	// int64 judgeId = 3; //judgeId
	UserId    int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`       //userId
	ProblemId int64 `protobuf:"varint,5,opt,name=problemId,proto3" json:"problemId,omitempty"` //problemId
	// string oj = 6; //oj
	Result string `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"` //result
	// int64 time = 8; //time
	// int64 memory = 9; //memory
	// int64 length = 10; //length
	Language   string `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`      //language
	SubmitTime int64  `protobuf:"varint,12,opt,name=submitTime,proto3" json:"submitTime,omitempty"` //submittime
	// string judger = 13; //judger
	Contest int64 `protobuf:"varint,14,opt,name=contest,proto3" json:"contest,omitempty"` //contest
	// int64 contestproblem = 15; //contestproblem
	// string code = 16; //code
	// string testcase = 17; //testcase
	// string message = 18; //message
	ProblemTitle string `protobuf:"bytes,19,opt,name=problemTitle,proto3" json:"problemTitle,omitempty"` //problemtitle
	// int64 rating = 20; //rating
	// string ip = 21; //ip
	Order bool `protobuf:"varint,22,opt,name=order,proto3" json:"order,omitempty"` //order
}

func (x *SearchJudgestatusReq) Reset() {
	*x = SearchJudgestatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchJudgestatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchJudgestatusReq) ProtoMessage() {}

func (x *SearchJudgestatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchJudgestatusReq.ProtoReflect.Descriptor instead.
func (*SearchJudgestatusReq) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{9}
}

func (x *SearchJudgestatusReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchJudgestatusReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchJudgestatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchJudgestatusReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *SearchJudgestatusReq) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *SearchJudgestatusReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SearchJudgestatusReq) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *SearchJudgestatusReq) GetContest() int64 {
	if x != nil {
		return x.Contest
	}
	return 0
}

func (x *SearchJudgestatusReq) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *SearchJudgestatusReq) GetOrder() bool {
	if x != nil {
		return x.Order
	}
	return false
}

type SearchJudgestatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Judgestatus []*Judgestatus `protobuf:"bytes,1,rep,name=judgestatus,proto3" json:"judgestatus,omitempty"` //judgestatus
}

func (x *SearchJudgestatusResp) Reset() {
	*x = SearchJudgestatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judgestatus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchJudgestatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchJudgestatusResp) ProtoMessage() {}

func (x *SearchJudgestatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_judgestatus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchJudgestatusResp.ProtoReflect.Descriptor instead.
func (*SearchJudgestatusResp) Descriptor() ([]byte, []int) {
	return file_judgestatus_proto_rawDescGZIP(), []int{10}
}

func (x *SearchJudgestatusResp) GetJudgestatus() []*Judgestatus {
	if x != nil {
		return x.Judgestatus
	}
	return nil
}

var File_judgestatus_proto protoreflect.FileDescriptor

var file_judgestatus_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xe9, 0x04, 0x0a, 0x0b, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x6a,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0xc3, 0x03, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6a, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x6a, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x73, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x61, 0x73, 0x65, 0x4e,
	0x75, 0x6d, 0x22, 0x9a, 0x02, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0x9e, 0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a,
	0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xce, 0x03, 0x0a, 0x0d, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01,
	0x12, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a,
	0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_judgestatus_proto_rawDescOnce sync.Once
	file_judgestatus_proto_rawDescData = file_judgestatus_proto_rawDesc
)

func file_judgestatus_proto_rawDescGZIP() []byte {
	file_judgestatus_proto_rawDescOnce.Do(func() {
		file_judgestatus_proto_rawDescData = protoimpl.X.CompressGZIP(file_judgestatus_proto_rawDescData)
	})
	return file_judgestatus_proto_rawDescData
}

var file_judgestatus_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_judgestatus_proto_goTypes = []any{
	(*Judgestatus)(nil),            // 0: judgeStatus.Judgestatus
	(*AddJudgestatusReq)(nil),      // 1: judgeStatus.AddJudgestatusReq
	(*AddJudgestatusResp)(nil),     // 2: judgeStatus.AddJudgestatusResp
	(*UpdateJudgestatusReq)(nil),   // 3: judgeStatus.UpdateJudgestatusReq
	(*UpdateJudgestatusResp)(nil),  // 4: judgeStatus.UpdateJudgestatusResp
	(*DelJudgestatusReq)(nil),      // 5: judgeStatus.DelJudgestatusReq
	(*DelJudgestatusResp)(nil),     // 6: judgeStatus.DelJudgestatusResp
	(*GetJudgestatusByIdReq)(nil),  // 7: judgeStatus.GetJudgestatusByIdReq
	(*GetJudgestatusByIdResp)(nil), // 8: judgeStatus.GetJudgestatusByIdResp
	(*SearchJudgestatusReq)(nil),   // 9: judgeStatus.SearchJudgestatusReq
	(*SearchJudgestatusResp)(nil),  // 10: judgeStatus.SearchJudgestatusResp
}
var file_judgestatus_proto_depIdxs = []int32{
	0,  // 0: judgeStatus.GetJudgestatusByIdResp.judgestatus:type_name -> judgeStatus.Judgestatus
	0,  // 1: judgeStatus.SearchJudgestatusResp.judgestatus:type_name -> judgeStatus.Judgestatus
	1,  // 2: judgeStatus.judge_service.AddJudgestatus:input_type -> judgeStatus.AddJudgestatusReq
	3,  // 3: judgeStatus.judge_service.UpdateJudgestatus:input_type -> judgeStatus.UpdateJudgestatusReq
	5,  // 4: judgeStatus.judge_service.DelJudgestatus:input_type -> judgeStatus.DelJudgestatusReq
	7,  // 5: judgeStatus.judge_service.GetJudgestatusById:input_type -> judgeStatus.GetJudgestatusByIdReq
	9,  // 6: judgeStatus.judge_service.SearchJudgestatus:input_type -> judgeStatus.SearchJudgestatusReq
	2,  // 7: judgeStatus.judge_service.AddJudgestatus:output_type -> judgeStatus.AddJudgestatusResp
	4,  // 8: judgeStatus.judge_service.UpdateJudgestatus:output_type -> judgeStatus.UpdateJudgestatusResp
	6,  // 9: judgeStatus.judge_service.DelJudgestatus:output_type -> judgeStatus.DelJudgestatusResp
	8,  // 10: judgeStatus.judge_service.GetJudgestatusById:output_type -> judgeStatus.GetJudgestatusByIdResp
	10, // 11: judgeStatus.judge_service.SearchJudgestatus:output_type -> judgeStatus.SearchJudgestatusResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_judgestatus_proto_init() }
func file_judgestatus_proto_init() {
	if File_judgestatus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_judgestatus_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Judgestatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgestatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgestatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgestatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgestatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DelJudgestatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DelJudgestatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgestatusByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgestatusByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchJudgestatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judgestatus_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchJudgestatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_judgestatus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_judgestatus_proto_goTypes,
		DependencyIndexes: file_judgestatus_proto_depIdxs,
		MessageInfos:      file_judgestatus_proto_msgTypes,
	}.Build()
	File_judgestatus_proto = out.File
	file_judgestatus_proto_rawDesc = nil
	file_judgestatus_proto_goTypes = nil
	file_judgestatus_proto_depIdxs = nil
}
